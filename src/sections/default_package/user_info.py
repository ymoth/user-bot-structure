import vkquick
from src.message_handlers import success_text

from src.misc import default_package


platforms = {
    1: "–ú–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏",
    2: "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è iPhone",
    3: "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è iPad",
    4: "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è Android",
    5: "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è Windows Phone",
    6: "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è Windows 10",
    7: "–ü–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ —Å–∞–π—Ç–∞"
}


@default_package.command("–≤–∫–∏–Ω—Ñ–æ")
async def info(context: vkquick.NewMessage,
               user: vkquick.User = None):

    user_fields = "photo_id, verified, sex, bdate, city, country, home_town," \
                  " has_photo, photo_50, photo_100, photo_200_orig, photo_200," \
                  " photo_400_orig, photo_max, photo_max_orig, online, domain," \
                  " has_mobile, contacts, site, education, universities, schools," \
                  " status, last_seen, followers_count, common_count, occupation," \
                  " nickname, relatives, relation, personal, connections, exports" \
                  ", activities, interests, music, movies, tv, books, games," \
                  " about, quotes, can_post, can_see_all_posts, can_see_audio," \
                  " can_write_private_message, can_send_friend_request, is_favorite," \
                  " is_hidden_from_feed, timezone, screen_name, maiden_name, crop_photo," \
                  " is_friend, friend_status, career, military, blacklisted, blacklisted_by_me, can_be_invited_group."

    user = await vkquick.User.fetch_one(context.api, context.msg.from_id if not user else user.id,
                                        fields=user_fields.split(", "), name_case="abl")

    registration_date = await vkquick.get_user_registration_date(user.id)
    formatted_date = registration_date.strftime("%d.%m.%Y")
    fields = user.fields

    message = f"""
    üìÉ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ - {user:@[fullname]}

    | –¶–∏—Ñ—Ä–µ–Ω–Ω—ã–π ID ‚Üí {fields['id']}
    | –ë—É–∫–≤–µ–Ω–Ω—ã–π ID ‚Üí {fields['screen_name']}
    | –ü–æ–ª (–ú/–ñ) ‚Üí {'–ú—É–∂—Å–∫–æ–π' if fields['sex'] == 2 else '–ñ–µ–Ω—Å–∫–∏–π'}
    | –í–µ—Ä–æ—è—Ç–Ω—ã–π –≥–æ—Ä–æ–¥ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è ‚Üí {fields.get("city", {}).get("title", "–ù–µ –Ω–∞–π–¥–µ–Ω")}
    | –°–µ–π—á–∞—Å –æ–Ω–ª–∞–π–Ω ‚Üí {"üü¢ –î–∞" if fields['online'] else 'üî¥ –ù–µ—Ç'}
    | –¢–∏–ø –ø—Ä–æ—Ñ–∏–ª—è ‚Üí {"üîí –ó–∞–∫—Ä—ã—Ç—ã–π" if fields['is_closed'] else 'üîì –û—Ç–∫—Ä—ã—Ç—ã–π'}
    | –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è ‚Üí {fields.get("bdate", "–ù–µ –∏–º–µ–µ—Ç—Å—è")}
    | –£ –º–µ–Ω—è –≤ –¥—Ä—É–∑—å—è—Ö: {"–î–∞" if fields.get("is_friend") else "–ù–µ—Ç"}
    | –°—Ç–∞—Ç—É—Å: {fields.get("status", "–ù–µ –∏–º–µ–µ—Ç—Å—è")[:50] or "–ù–µ –∏–º–µ–µ—Ç—Å—è. "}
    | –§–æ–ª–ª–æ–≤–µ—Ä–æ–≤: {fields.get("followers_count", "–ù–µ —É–∫–∞–∑–∞–Ω–æ. ")}
    | –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–∫—Ä—ã—Ç–∞: {"–î–∞" if fields.get("is_closed") else "–ù–µ—Ç"}
    | –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è: {"–î–∞" if fields.get("verified") else "–ù–µ—Ç"}
    | –°–µ–π—á–∞—Å –æ–Ω–ª–∞–π–Ω: {"–î–∞" if fields.get("online") else "–ù–µ—Ç"}
    | –í–∏–¥—ã –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: {fields.get("activities", "–ù–µ —É–∫–∞–∑–∞–Ω—ã")}
    | –†–µ–ª–∏–≥–∏—è: {fields.get("religion", "–ù–µ —É–∫–∞–∑–∞–Ω–∞")}
    | –†–æ–¥–Ω—ã–µ: {", ".join([str(i) for i in fields.get("relatives", ["–ù–µ –∏–º–µ—é—Ç—Å—è"])])}
    
    | –°—Å—ã–ª–∫–∞ –Ω–∞ –ª—Å: vk.me/{fields.get("screen_name")}
    | –°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É: vk.com/{fields.get("screen_name")}
    | –ö–æ—Ä–æ—Ç–∫–∞—è —Å—Å—ã–ª–∫–∞: vk.com/id{fields.get("id")}
    
    | –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ‚Üí {formatted_date}
    """.replace(" " * 4, "")

    await context.answer(success_text(message))
